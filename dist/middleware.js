// Generated by CoffeeScript 1.12.6
'use strict';
var _, del, get, path, post, put, url;

_ = require('lodash');

get = require('./get');

post = require('./post');

put = require('./put');

del = require('./delete');

url = require('url');

path = require('path');

module.exports = function(models, config) {
  var middleware;
  middleware = function(req, res, next) {
    var Model, error, filteredUrlPieces, method, model, modelId, modelName, params, parsed, urlPieces;
    parsed = url.parse(_.trim(req.originalUrl, path.sep));
    urlPieces = parsed.pathname.split(path.sep);
    method = req.method.toLowerCase();
    error = function(message) {
      if (next && _.isFunction(next)) {
        next();
      }
      return Promise.reject({
        error: message
      });
    };
    if (!urlPieces.length) {
      return error('Unknown path');
    }
    modelName = null;
    modelId = null;
    if (this && this.modelName) {
      modelName = this.modelName.toLowerCase();
      if (req.params && req.params.id) {
        modelId = req.params.id;
      }
    } else if (!models.hasOwnProperty(urlPieces[urlPieces.length - 1].toLowerCase())) {
      if (urlPieces.length < 2 || !models.hasOwnProperty(urlPieces[urlPieces.length - 2].toLowerCase())) {
        return error('No match');
      } else {
        modelName = urlPieces[urlPieces.length - 2].toLowerCase();
        modelId = urlPieces[urlPieces.length - 1];
      }
    } else {
      modelName = urlPieces[urlPieces.length - 1].toLowerCase();
    }
    filteredUrlPieces = [modelName];
    Model = models[modelName];
    model = new Model;
    if (modelId !== null) {
      params = {};
      params[model.idAttribute] = modelId;
      model = Model.forge(params);
      filteredUrlPieces.push(modelId);
    }
    if (method === 'get') {
      return get(req, res, filteredUrlPieces, model, config);
    } else if (method === 'post') {
      return post(req, res, filteredUrlPieces, model, config);
    } else if (method === 'put') {
      return put(req, res, filteredUrlPieces, model, config);
    } else if (method === 'delete') {
      return del(req, res, filteredUrlPieces, model, config);
    }
  };
  return function(req, res, next) {
    if (typeof req === 'string') {
      return middleware.bind({
        modelName: req
      });
    }
    return middleware(req, res, next);
  };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY3NyYy9taWRkbGV3YXJlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQSxJQUFBOztBQUNBLENBQUEsR0FBSSxPQUFBLENBQVEsUUFBUjs7QUFDSixHQUFBLEdBQU0sT0FBQSxDQUFRLE9BQVI7O0FBQ04sSUFBQSxHQUFPLE9BQUEsQ0FBUSxRQUFSOztBQUNQLEdBQUEsR0FBTSxPQUFBLENBQVEsT0FBUjs7QUFDTixHQUFBLEdBQU0sT0FBQSxDQUFRLFVBQVI7O0FBQ04sR0FBQSxHQUFNLE9BQUEsQ0FBUSxLQUFSOztBQUNOLElBQUEsR0FBTyxPQUFBLENBQVEsTUFBUjs7QUFFUCxNQUFNLENBQUMsT0FBUCxHQUFpQixTQUFDLE1BQUQsRUFBUyxNQUFUO0FBRWYsTUFBQTtFQUFBLFVBQUEsR0FBYSxTQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsSUFBWDtBQUNYLFFBQUE7SUFBQSxNQUFBLEdBQVMsR0FBRyxDQUFDLEtBQUosQ0FBVSxDQUFDLENBQUMsSUFBRixDQUFPLEdBQUcsQ0FBQyxXQUFYLEVBQXdCLElBQUksQ0FBQyxHQUE3QixDQUFWO0lBQ1QsU0FBQSxHQUFZLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBaEIsQ0FBc0IsSUFBSSxDQUFDLEdBQTNCO0lBQ1osTUFBQSxHQUFTLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBWCxDQUFBO0lBRVQsS0FBQSxHQUFRLFNBQUMsT0FBRDtNQUNOLElBQUcsSUFBQSxJQUFTLENBQUMsQ0FBQyxVQUFGLENBQWEsSUFBYixDQUFaO1FBQ0UsSUFBQSxDQUFBLEVBREY7O2FBRUEsT0FBTyxDQUFDLE1BQVIsQ0FBZTtRQUFBLEtBQUEsRUFBTyxPQUFQO09BQWY7SUFITTtJQUtSLElBQUcsQ0FBQyxTQUFTLENBQUMsTUFBZDtBQUNFLGFBQU8sS0FBQSxDQUFNLGNBQU4sRUFEVDs7SUFFQSxTQUFBLEdBQVk7SUFDWixPQUFBLEdBQVU7SUFFVixJQUFHLElBQUEsSUFBUyxJQUFDLENBQUEsU0FBYjtNQUNFLFNBQUEsR0FBWSxJQUFDLENBQUEsU0FBUyxDQUFDLFdBQVgsQ0FBQTtNQUNaLElBQUcsR0FBRyxDQUFDLE1BQUosSUFBZSxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQTdCO1FBQ0UsT0FBQSxHQUFVLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FEdkI7T0FGRjtLQUFBLE1BSUssSUFBRyxDQUFDLE1BQU0sQ0FBQyxjQUFQLENBQXNCLFNBQVUsQ0FBQSxTQUFTLENBQUMsTUFBVixHQUFtQixDQUFuQixDQUFxQixDQUFDLFdBQWhDLENBQUEsQ0FBdEIsQ0FBSjtNQUNILElBQUcsU0FBUyxDQUFDLE1BQVYsR0FBbUIsQ0FBbkIsSUFBd0IsQ0FBQyxNQUFNLENBQUMsY0FBUCxDQUFzQixTQUFVLENBQUEsU0FBUyxDQUFDLE1BQVYsR0FBbUIsQ0FBbkIsQ0FBcUIsQ0FBQyxXQUFoQyxDQUFBLENBQXRCLENBQTVCO0FBQ0UsZUFBTyxLQUFBLENBQU0sVUFBTixFQURUO09BQUEsTUFBQTtRQUdFLFNBQUEsR0FBWSxTQUFVLENBQUEsU0FBUyxDQUFDLE1BQVYsR0FBbUIsQ0FBbkIsQ0FBcUIsQ0FBQyxXQUFoQyxDQUFBO1FBQ1osT0FBQSxHQUFVLFNBQVUsQ0FBQSxTQUFTLENBQUMsTUFBVixHQUFtQixDQUFuQixFQUp0QjtPQURHO0tBQUEsTUFBQTtNQU9ILFNBQUEsR0FBWSxTQUFVLENBQUEsU0FBUyxDQUFDLE1BQVYsR0FBbUIsQ0FBbkIsQ0FBcUIsQ0FBQyxXQUFoQyxDQUFBLEVBUFQ7O0lBUUwsaUJBQUEsR0FBb0IsQ0FBRSxTQUFGO0lBQ3BCLEtBQUEsR0FBUSxNQUFPLENBQUEsU0FBQTtJQUNmLEtBQUEsR0FBUSxJQUFJO0lBQ1osSUFBRyxPQUFBLEtBQVcsSUFBZDtNQUNFLE1BQUEsR0FBUztNQUNULE1BQU8sQ0FBQSxLQUFLLENBQUMsV0FBTixDQUFQLEdBQTRCO01BQzVCLEtBQUEsR0FBUSxLQUFLLENBQUMsS0FBTixDQUFZLE1BQVo7TUFDUixpQkFBaUIsQ0FBQyxJQUFsQixDQUF1QixPQUF2QixFQUpGOztJQUtBLElBQUcsTUFBQSxLQUFVLEtBQWI7QUFDRSxhQUFPLEdBQUEsQ0FBSSxHQUFKLEVBQVMsR0FBVCxFQUFjLGlCQUFkLEVBQWlDLEtBQWpDLEVBQXdDLE1BQXhDLEVBRFQ7S0FBQSxNQUVLLElBQUcsTUFBQSxLQUFVLE1BQWI7QUFDSCxhQUFPLElBQUEsQ0FBSyxHQUFMLEVBQVUsR0FBVixFQUFlLGlCQUFmLEVBQWtDLEtBQWxDLEVBQXlDLE1BQXpDLEVBREo7S0FBQSxNQUVBLElBQUcsTUFBQSxLQUFVLEtBQWI7QUFDSCxhQUFPLEdBQUEsQ0FBSSxHQUFKLEVBQVMsR0FBVCxFQUFjLGlCQUFkLEVBQWlDLEtBQWpDLEVBQXdDLE1BQXhDLEVBREo7S0FBQSxNQUVBLElBQUcsTUFBQSxLQUFVLFFBQWI7QUFDSCxhQUFPLEdBQUEsQ0FBSSxHQUFKLEVBQVMsR0FBVCxFQUFjLGlCQUFkLEVBQWlDLEtBQWpDLEVBQXdDLE1BQXhDLEVBREo7O0VBekNNO1NBNkNiLFNBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxJQUFYO0lBRUUsSUFBRyxPQUFPLEdBQVAsS0FBYyxRQUFqQjtBQUNFLGFBQU8sVUFBVSxDQUFDLElBQVgsQ0FBZ0I7UUFBQSxTQUFBLEVBQVcsR0FBWDtPQUFoQixFQURUOztXQUVBLFVBQUEsQ0FBVyxHQUFYLEVBQWdCLEdBQWhCLEVBQXFCLElBQXJCO0VBSkY7QUEvQ2UiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbl8gPSByZXF1aXJlKCdsb2Rhc2gnKVxuZ2V0ID0gcmVxdWlyZSgnLi9nZXQnKVxucG9zdCA9IHJlcXVpcmUoJy4vcG9zdCcpXG5wdXQgPSByZXF1aXJlKCcuL3B1dCcpXG5kZWwgPSByZXF1aXJlKCcuL2RlbGV0ZScpXG51cmwgPSByZXF1aXJlKCd1cmwnKVxucGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IChtb2RlbHMsIGNvbmZpZykgLT5cblxuICBtaWRkbGV3YXJlID0gKHJlcSwgcmVzLCBuZXh0KSAtPlxuICAgIHBhcnNlZCA9IHVybC5wYXJzZShfLnRyaW0ocmVxLm9yaWdpbmFsVXJsLCBwYXRoLnNlcCkpXG4gICAgdXJsUGllY2VzID0gcGFyc2VkLnBhdGhuYW1lLnNwbGl0KHBhdGguc2VwKVxuICAgIG1ldGhvZCA9IHJlcS5tZXRob2QudG9Mb3dlckNhc2UoKVxuXG4gICAgZXJyb3IgPSAobWVzc2FnZSkgLT5cbiAgICAgIGlmIG5leHQgYW5kIF8uaXNGdW5jdGlvbihuZXh0KVxuICAgICAgICBuZXh0KClcbiAgICAgIFByb21pc2UucmVqZWN0IGVycm9yOiBtZXNzYWdlXG5cbiAgICBpZiAhdXJsUGllY2VzLmxlbmd0aFxuICAgICAgcmV0dXJuIGVycm9yKCdVbmtub3duIHBhdGgnKVxuICAgIG1vZGVsTmFtZSA9IG51bGxcbiAgICBtb2RlbElkID0gbnVsbFxuICAgICMgTmFtZWQgbW9kZWxcbiAgICBpZiB0aGlzIGFuZCBAbW9kZWxOYW1lXG4gICAgICBtb2RlbE5hbWUgPSBAbW9kZWxOYW1lLnRvTG93ZXJDYXNlKClcbiAgICAgIGlmIHJlcS5wYXJhbXMgYW5kIHJlcS5wYXJhbXMuaWRcbiAgICAgICAgbW9kZWxJZCA9IHJlcS5wYXJhbXMuaWRcbiAgICBlbHNlIGlmICFtb2RlbHMuaGFzT3duUHJvcGVydHkodXJsUGllY2VzW3VybFBpZWNlcy5sZW5ndGggLSAxXS50b0xvd2VyQ2FzZSgpKVxuICAgICAgaWYgdXJsUGllY2VzLmxlbmd0aCA8IDIgb3IgIW1vZGVscy5oYXNPd25Qcm9wZXJ0eSh1cmxQaWVjZXNbdXJsUGllY2VzLmxlbmd0aCAtIDJdLnRvTG93ZXJDYXNlKCkpXG4gICAgICAgIHJldHVybiBlcnJvcignTm8gbWF0Y2gnKVxuICAgICAgZWxzZVxuICAgICAgICBtb2RlbE5hbWUgPSB1cmxQaWVjZXNbdXJsUGllY2VzLmxlbmd0aCAtIDJdLnRvTG93ZXJDYXNlKClcbiAgICAgICAgbW9kZWxJZCA9IHVybFBpZWNlc1t1cmxQaWVjZXMubGVuZ3RoIC0gMV1cbiAgICBlbHNlXG4gICAgICBtb2RlbE5hbWUgPSB1cmxQaWVjZXNbdXJsUGllY2VzLmxlbmd0aCAtIDFdLnRvTG93ZXJDYXNlKClcbiAgICBmaWx0ZXJlZFVybFBpZWNlcyA9IFsgbW9kZWxOYW1lIF1cbiAgICBNb2RlbCA9IG1vZGVsc1ttb2RlbE5hbWVdXG4gICAgbW9kZWwgPSBuZXcgTW9kZWxcbiAgICBpZiBtb2RlbElkICE9IG51bGxcbiAgICAgIHBhcmFtcyA9IHt9XG4gICAgICBwYXJhbXNbbW9kZWwuaWRBdHRyaWJ1dGVdID0gbW9kZWxJZFxuICAgICAgbW9kZWwgPSBNb2RlbC5mb3JnZShwYXJhbXMpXG4gICAgICBmaWx0ZXJlZFVybFBpZWNlcy5wdXNoIG1vZGVsSWRcbiAgICBpZiBtZXRob2QgPT0gJ2dldCdcbiAgICAgIHJldHVybiBnZXQocmVxLCByZXMsIGZpbHRlcmVkVXJsUGllY2VzLCBtb2RlbCwgY29uZmlnKVxuICAgIGVsc2UgaWYgbWV0aG9kID09ICdwb3N0J1xuICAgICAgcmV0dXJuIHBvc3QocmVxLCByZXMsIGZpbHRlcmVkVXJsUGllY2VzLCBtb2RlbCwgY29uZmlnKVxuICAgIGVsc2UgaWYgbWV0aG9kID09ICdwdXQnXG4gICAgICByZXR1cm4gcHV0KHJlcSwgcmVzLCBmaWx0ZXJlZFVybFBpZWNlcywgbW9kZWwsIGNvbmZpZylcbiAgICBlbHNlIGlmIG1ldGhvZCA9PSAnZGVsZXRlJ1xuICAgICAgcmV0dXJuIGRlbChyZXEsIHJlcywgZmlsdGVyZWRVcmxQaWVjZXMsIG1vZGVsLCBjb25maWcpXG4gICAgcmV0dXJuXG5cbiAgKHJlcSwgcmVzLCBuZXh0KSAtPlxuICAgICMgU3BlY2lmaWNhbGx5IGNhbGxpbmcgb3V0IGEgbmFtZWQgbW9kZWxcbiAgICBpZiB0eXBlb2YgcmVxID09ICdzdHJpbmcnXG4gICAgICByZXR1cm4gbWlkZGxld2FyZS5iaW5kKG1vZGVsTmFtZTogcmVxKVxuICAgIG1pZGRsZXdhcmUgcmVxLCByZXMsIG5leHRcbiJdfQ==
//# sourceURL=/freespace/home/umeboshi/workspace/bookshelf-api/csrc/middleware.coffee