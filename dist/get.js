// Generated by CoffeeScript 1.12.6
'use strict';
var HowhapList;

HowhapList = require('howhap-list');

module.exports = function(req, res, urlPieces, model, config) {
  var direction, fetchParams, hasTimestamps, list, promise;
  promise = model;
  list = new HowhapList(null, {
    availableErrors: config.errors
  });
  hasTimestamps = null;
  if (model.hasTimestamps === false) {
    hasTimestamps = [];
  } else {
    hasTimestamps = model.hasTimestamps;
  }
  if (typeof hasTimestamps === 'boolean') {
    hasTimestamps = ['created_at', 'updated_at'];
  }
  if (hasTimestamps.indexOf(config.deletedAttribute) !== -1) {
    promise = promise.where(config.deletedAttribute, null);
  }
  fetchParams = {};
  if (req.query && Array.isArray(req.query.withRelated)) {
    fetchParams.withRelated = req.query.withRelated;
  }
  if (urlPieces.length > 1) {
    promise = promise.fetch(fetchParams);
  } else {
    if (req.query) {
      if (req.query.columns) {
        fetchParams.columns = req.query.columns;
      }
      if (req.query.where) {
        if (Array.isArray(req.query.where)) {
          promise = promise.where.apply(promise, req.query.where);
        } else if (Object.prototype.toString.call(req.query.where) === '[object Object]') {
          promise = promise.where(req.query.where);
        }
      }
      if (req.query.sort || req.query.offset) {
        direction = req.query.direction || 'ASC';
        direction = direction.toLowerCase();
        promise = promise.query('orderBy', req.query.sort, direction);
      }
      if (req.query.offset) {
        promise = promise.offset(req.query.offset);
      }
      if (req.query.limit) {
        promise = promise.limit(req.query.limit);
      }
    }
    promise = promise.fetchAll(fetchParams);
  }
  return promise.then(function(results) {
    if (!results) {
      list.add('RECORD_NOT_FOUND', {
        model: urlPieces[0],
        id: urlPieces[1]
      });
      res.status(config.errors.RECORD_NOT_FOUND.status).json(list.toObject());
    } else {
      res.json(results.toJSON());
    }
  })["catch"](function(err) {
    list.add('RECORD_NOT_FOUND', {
      error: err.toString()
    });
    res.status(config.errors.UNKNOWN.status).json(list.toObject());
  }).then(function() {
    return Promise.resolve({
      urlPieces: urlPieces,
      model: model
    });
  });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjc3JjL2dldC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUEsSUFBQTs7QUFDQSxVQUFBLEdBQWEsT0FBQSxDQUFRLGFBQVI7O0FBRWIsTUFBTSxDQUFDLE9BQVAsR0FBaUIsU0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLFNBQVgsRUFBc0IsS0FBdEIsRUFBNkIsTUFBN0I7QUFDZixNQUFBO0VBQUEsT0FBQSxHQUFVO0VBQ1YsSUFBQSxHQUFPLElBQUksVUFBSixDQUFlLElBQWYsRUFBcUI7SUFBQSxlQUFBLEVBQWlCLE1BQU0sQ0FBQyxNQUF4QjtHQUFyQjtFQUNQLGFBQUEsR0FBZ0I7RUFDaEIsSUFBRyxLQUFLLENBQUMsYUFBTixLQUF1QixLQUExQjtJQUNFLGFBQUEsR0FBZ0IsR0FEbEI7R0FBQSxNQUFBO0lBR0UsYUFBQSxHQUFnQixLQUFLLENBQUMsY0FIeEI7O0VBSUEsSUFBRyxPQUFPLGFBQVAsS0FBd0IsU0FBM0I7SUFDRSxhQUFBLEdBQWdCLENBQ2QsWUFEYyxFQUVkLFlBRmMsRUFEbEI7O0VBS0EsSUFBRyxhQUFhLENBQUMsT0FBZCxDQUFzQixNQUFNLENBQUMsZ0JBQTdCLENBQUEsS0FBa0QsQ0FBQyxDQUF0RDtJQUNFLE9BQUEsR0FBVSxPQUFPLENBQUMsS0FBUixDQUFjLE1BQU0sQ0FBQyxnQkFBckIsRUFBdUMsSUFBdkMsRUFEWjs7RUFFQSxXQUFBLEdBQWM7RUFDZCxJQUFHLEdBQUcsQ0FBQyxLQUFKLElBQWMsS0FBSyxDQUFDLE9BQU4sQ0FBYyxHQUFHLENBQUMsS0FBSyxDQUFDLFdBQXhCLENBQWpCO0lBQ0UsV0FBVyxDQUFDLFdBQVosR0FBMEIsR0FBRyxDQUFDLEtBQUssQ0FBQyxZQUR0Qzs7RUFHQSxJQUFHLFNBQVMsQ0FBQyxNQUFWLEdBQW1CLENBQXRCO0lBQ0UsT0FBQSxHQUFVLE9BQU8sQ0FBQyxLQUFSLENBQWMsV0FBZCxFQURaO0dBQUEsTUFBQTtJQUdFLElBQUcsR0FBRyxDQUFDLEtBQVA7TUFFRSxJQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBYjtRQUNFLFdBQVcsQ0FBQyxPQUFaLEdBQXNCLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFEbEM7O01BR0EsSUFBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQWI7UUFDRSxJQUFHLEtBQUssQ0FBQyxPQUFOLENBQWMsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUF4QixDQUFIO1VBQ0UsT0FBQSxHQUFVLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBZCxDQUFvQixPQUFwQixFQUE2QixHQUFHLENBQUMsS0FBSyxDQUFDLEtBQXZDLEVBRFo7U0FBQSxNQUVLLElBQUcsTUFBTSxDQUFBLFNBQUUsQ0FBQSxRQUFRLENBQUMsSUFBakIsQ0FBc0IsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFoQyxDQUFBLEtBQTBDLGlCQUE3QztVQUNILE9BQUEsR0FBVSxPQUFPLENBQUMsS0FBUixDQUFjLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBeEIsRUFEUDtTQUhQOztNQU1BLElBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFWLElBQWtCLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBL0I7UUFDRSxTQUFBLEdBQVksR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFWLElBQXVCO1FBQ25DLFNBQUEsR0FBWSxTQUFTLENBQUMsV0FBVixDQUFBO1FBQ1osT0FBQSxHQUFVLE9BQU8sQ0FBQyxLQUFSLENBQWMsU0FBZCxFQUF5QixHQUFHLENBQUMsS0FBSyxDQUFDLElBQW5DLEVBQXlDLFNBQXpDLEVBSFo7O01BS0EsSUFBRyxHQUFHLENBQUMsS0FBSyxDQUFDLE1BQWI7UUFDRSxPQUFBLEdBQVUsT0FBTyxDQUFDLE1BQVIsQ0FBZSxHQUFHLENBQUMsS0FBSyxDQUFDLE1BQXpCLEVBRFo7O01BR0EsSUFBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQWI7UUFDRSxPQUFBLEdBQVUsT0FBTyxDQUFDLEtBQVIsQ0FBYyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQXhCLEVBRFo7T0FuQkY7O0lBcUJBLE9BQUEsR0FBVSxPQUFPLENBQUMsUUFBUixDQUFpQixXQUFqQixFQXhCWjs7U0F5QkEsT0FBTyxDQUFDLElBQVIsQ0FBYSxTQUFDLE9BQUQ7SUFDWCxJQUFHLENBQUMsT0FBSjtNQUNFLElBQUksQ0FBQyxHQUFMLENBQVMsa0JBQVQsRUFDRTtRQUFBLEtBQUEsRUFBTyxTQUFVLENBQUEsQ0FBQSxDQUFqQjtRQUNBLEVBQUEsRUFBSSxTQUFVLENBQUEsQ0FBQSxDQURkO09BREY7TUFHQSxHQUFHLENBQUMsTUFBSixDQUFXLE1BQU0sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsTUFBMUMsQ0FBaUQsQ0FBQyxJQUFsRCxDQUF1RCxJQUFJLENBQUMsUUFBTCxDQUFBLENBQXZELEVBSkY7S0FBQSxNQUFBO01BTUUsR0FBRyxDQUFDLElBQUosQ0FBUyxPQUFPLENBQUMsTUFBUixDQUFBLENBQVQsRUFORjs7RUFEVyxDQUFiLENBU0MsRUFBQyxLQUFELEVBVEQsQ0FTUSxTQUFDLEdBQUQ7SUFDTixJQUFJLENBQUMsR0FBTCxDQUFTLGtCQUFULEVBQTZCO01BQUEsS0FBQSxFQUFPLEdBQUcsQ0FBQyxRQUFKLENBQUEsQ0FBUDtLQUE3QjtJQUNBLEdBQUcsQ0FBQyxNQUFKLENBQVcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBakMsQ0FBd0MsQ0FBQyxJQUF6QyxDQUE4QyxJQUFJLENBQUMsUUFBTCxDQUFBLENBQTlDO0VBRk0sQ0FUUixDQWFDLENBQUMsSUFiRixDQWFPLFNBQUE7V0FDTCxPQUFPLENBQUMsT0FBUixDQUNFO01BQUEsU0FBQSxFQUFXLFNBQVg7TUFDQSxLQUFBLEVBQU8sS0FEUDtLQURGO0VBREssQ0FiUDtBQTVDZSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuSG93aGFwTGlzdCA9IHJlcXVpcmUoJ2hvd2hhcC1saXN0JylcblxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCByZXMsIHVybFBpZWNlcywgbW9kZWwsIGNvbmZpZykgLT5cbiAgcHJvbWlzZSA9IG1vZGVsXG4gIGxpc3QgPSBuZXcgSG93aGFwTGlzdChudWxsLCBhdmFpbGFibGVFcnJvcnM6IGNvbmZpZy5lcnJvcnMpXG4gIGhhc1RpbWVzdGFtcHMgPSBudWxsXG4gIGlmIG1vZGVsLmhhc1RpbWVzdGFtcHMgPT0gZmFsc2VcbiAgICBoYXNUaW1lc3RhbXBzID0gW11cbiAgZWxzZVxuICAgIGhhc1RpbWVzdGFtcHMgPSBtb2RlbC5oYXNUaW1lc3RhbXBzXG4gIGlmIHR5cGVvZiBoYXNUaW1lc3RhbXBzID09ICdib29sZWFuJ1xuICAgIGhhc1RpbWVzdGFtcHMgPSBbXG4gICAgICAnY3JlYXRlZF9hdCdcbiAgICAgICd1cGRhdGVkX2F0J1xuICAgIF1cbiAgaWYgaGFzVGltZXN0YW1wcy5pbmRleE9mKGNvbmZpZy5kZWxldGVkQXR0cmlidXRlKSAhPSAtMVxuICAgIHByb21pc2UgPSBwcm9taXNlLndoZXJlKGNvbmZpZy5kZWxldGVkQXR0cmlidXRlLCBudWxsKVxuICBmZXRjaFBhcmFtcyA9IHt9XG4gIGlmIHJlcS5xdWVyeSBhbmQgQXJyYXkuaXNBcnJheShyZXEucXVlcnkud2l0aFJlbGF0ZWQpXG4gICAgZmV0Y2hQYXJhbXMud2l0aFJlbGF0ZWQgPSByZXEucXVlcnkud2l0aFJlbGF0ZWRcbiAgIyBHZXQgaW5kaXZpZHVhbCByZWNvcmRcbiAgaWYgdXJsUGllY2VzLmxlbmd0aCA+IDFcbiAgICBwcm9taXNlID0gcHJvbWlzZS5mZXRjaChmZXRjaFBhcmFtcylcbiAgZWxzZVxuICAgIGlmIHJlcS5xdWVyeVxuICAgICAgIyBDb2x1bW5zIHN1cHBvcnRcbiAgICAgIGlmIHJlcS5xdWVyeS5jb2x1bW5zXG4gICAgICAgIGZldGNoUGFyYW1zLmNvbHVtbnMgPSByZXEucXVlcnkuY29sdW1uc1xuICAgICAgIyBXaGVyZSBjbGF1c2Ugc3VwcG9ydFxuICAgICAgaWYgcmVxLnF1ZXJ5LndoZXJlXG4gICAgICAgIGlmIEFycmF5LmlzQXJyYXkocmVxLnF1ZXJ5LndoZXJlKVxuICAgICAgICAgIHByb21pc2UgPSBwcm9taXNlLndoZXJlLmFwcGx5KHByb21pc2UsIHJlcS5xdWVyeS53aGVyZSlcbiAgICAgICAgZWxzZSBpZiBPYmplY3Q6OnRvU3RyaW5nLmNhbGwocmVxLnF1ZXJ5LndoZXJlKSA9PSAnW29iamVjdCBPYmplY3RdJ1xuICAgICAgICAgIHByb21pc2UgPSBwcm9taXNlLndoZXJlKHJlcS5xdWVyeS53aGVyZSlcbiAgICAgICMgT3JkZXIgYnkgc3VwcG9ydCAobmVlZGVkIGZvciBvZmZzZXQpXG4gICAgICBpZiByZXEucXVlcnkuc29ydCBvciByZXEucXVlcnkub2Zmc2V0XG4gICAgICAgIGRpcmVjdGlvbiA9IHJlcS5xdWVyeS5kaXJlY3Rpb24gb3IgJ0FTQydcbiAgICAgICAgZGlyZWN0aW9uID0gZGlyZWN0aW9uLnRvTG93ZXJDYXNlKClcbiAgICAgICAgcHJvbWlzZSA9IHByb21pc2UucXVlcnkoJ29yZGVyQnknLCByZXEucXVlcnkuc29ydCwgZGlyZWN0aW9uKVxuICAgICAgIyBPZmZzZXQgc3VwcG9ydFxuICAgICAgaWYgcmVxLnF1ZXJ5Lm9mZnNldFxuICAgICAgICBwcm9taXNlID0gcHJvbWlzZS5vZmZzZXQgcmVxLnF1ZXJ5Lm9mZnNldFxuICAgICAgIyBMaW1pdCBzdXBwb3J0XG4gICAgICBpZiByZXEucXVlcnkubGltaXRcbiAgICAgICAgcHJvbWlzZSA9IHByb21pc2UubGltaXQgcmVxLnF1ZXJ5LmxpbWl0XG4gICAgcHJvbWlzZSA9IHByb21pc2UuZmV0Y2hBbGwoZmV0Y2hQYXJhbXMpXG4gIHByb21pc2UudGhlbigocmVzdWx0cykgLT5cbiAgICBpZiAhcmVzdWx0c1xuICAgICAgbGlzdC5hZGQgJ1JFQ09SRF9OT1RfRk9VTkQnLFxuICAgICAgICBtb2RlbDogdXJsUGllY2VzWzBdXG4gICAgICAgIGlkOiB1cmxQaWVjZXNbMV1cbiAgICAgIHJlcy5zdGF0dXMoY29uZmlnLmVycm9ycy5SRUNPUkRfTk9UX0ZPVU5ELnN0YXR1cykuanNvbiBsaXN0LnRvT2JqZWN0KClcbiAgICBlbHNlXG4gICAgICByZXMuanNvbiByZXN1bHRzLnRvSlNPTigpXG4gICAgcmV0dXJuXG4gICkuY2F0Y2goKGVycikgLT5cbiAgICBsaXN0LmFkZCAnUkVDT1JEX05PVF9GT1VORCcsIGVycm9yOiBlcnIudG9TdHJpbmcoKVxuICAgIHJlcy5zdGF0dXMoY29uZmlnLmVycm9ycy5VTktOT1dOLnN0YXR1cykuanNvbiBsaXN0LnRvT2JqZWN0KClcbiAgICByZXR1cm5cbiAgKS50aGVuIC0+XG4gICAgUHJvbWlzZS5yZXNvbHZlXG4gICAgICB1cmxQaWVjZXM6IHVybFBpZWNlc1xuICAgICAgbW9kZWw6IG1vZGVsXG4iXX0=
//# sourceURL=/freespace/home/umeboshi/workspace/bookshelf-api/csrc/get.coffee